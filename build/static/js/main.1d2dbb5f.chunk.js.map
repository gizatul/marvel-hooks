{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hook.js","resources/img/spinner.gif","components/spinner/spinner.js","components/errorMessage/error.svg","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/SingleComicPage.js","resources/img/pageNotFound.webp","components/pageNotFound/PageNotFound.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","isActive","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllComics","offset","res","results","map","_transformComic","getComic","id","console","log","comic","title","thumbnail","path","extension","price","prices","description","lang","textObjects","language","pages","pageCount","resourceURI","getAllCharacters","_transformCharacter","getCharacter","char","name","length","slice","homepage","urls","wiki","comics","items","Spinner","src","spinner","alt","ErrorMessage","View","objectFit","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","obj","default","catch","err","disabled","Skeleton","Info","substring","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicList","setComicList","comicListEnded","setComicListEnded","onComicListLoaded","newComicList","ComicsPage","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","Page404","pageNotFound","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1d2dbb5f.chunk.js","sourcesContent":["import './appHeader.scss';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink end \n                                 style={({isActive}) => ({'color': isActive ? '#9f0013' : null})} \n                                 to=\"/\">Characters</NavLink></li>\n                    <li><NavLink end \n                                 style={({isActive}) => ({'color': isActive ? '#9f0013' : null})} \n                                 to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {loading, request, error, clearError} = useHttp(); //деструктуризация возвращаемого объекта из useHttp\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=cb9119d84ffeb91c59dc6c6080764863';\n    const _baseOffset = 1247;\n\n    const getAllComics = async (offset = '0') => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComic); //сокращенный синтаксис map\n    }\n    \n    const getComic = async (id = 32) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        console.log(_transformComic(res.data.results[0]));\n        return _transformComic(res.data.results[0]);\n    }\n\n    const _transformComic = (comic) => {\n        return {\n            id: comic.id,\n            title: comic.title,\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\n            price: comic.prices[0].price ? comic.prices[0].price + '$' : 'Not available',\n            description: comic.description || 'There is no description',\n            lang: comic.textObjects[0]?.language || 'en-us', //использование ?. чтобы не было ошибки если не существует //выбрасывает undefined\n            pages: comic.pageCount ? comic.pageCount + 'p.' : 'No information about the number of pages',\n            resourceURI: comic.resourceURI,\n        }\n    }\n  \n    const getAllCharacters = async (offset = _baseOffset) => { \n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter); //аналог записи res.data.results.map(char => ._transformDataComics(char)) //внутрь map передается callback-ф-я которая содержится в ф-ии _transformCharacter\n    }\n\n    const getCharacter = async (id) => { \n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); \n        return _transformCharacter(res.data.results[0]); \n    }\n\n    const _transformCharacter = (char) => {  \n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description.length > 180  ? `${char.description.slice(0, 180)}...` : char.description.length <= 0 ? 'There is not description' : char.description,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            comics: char.comics.items,\n        } \n    }\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\n}\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type' : 'application/json'}) => {\n\n        setLoading(true);\n        try {\n            let response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) { \n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); \n            }\n            const data = await response.json();\n            setLoading(false);\n            return data;\n        }   catch(error) {\n            setLoading(false);\n            setError(error.message); //передаем текст ошибки (более продвинутый функционал)\n            throw error; //выкидываем ошибку\n        }\n    }, []) //usecallback используем, тк в дальнейшем возможно эту функцию будем размещать внутрь дочерних компонентов и не нужно вызывать лишних запросов - т.е. мемоизируем\n    const clearError = useCallback(() => setError(null), []); //Ф-я для очистки ошибки\n    return {loading, request, error, clearError};\n}\n","export default __webpack_public_path__ + \"static/media/spinner.cf2d997a.gif\";","import spinner from '../../resources/img/spinner.gif';\nimport './spinner.scss';\n\nconst Spinner = () => {\n  return (\n    <div className='spinner'>\n      <img  src={spinner} alt=\"loading\" />\n    </div>\n  )\n}\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.be36707d.svg\";","import error from './error.svg';\nimport './errorMessage.scss';\n\nconst ErrorMessage = () => {\n  return (\n    <div className='error'>\n      <img  src={error} alt=\"error\" />\n      <div className='error__text'>Something  went wrong</div>\n    </div>\n  )\n}\nexport default ErrorMessage;","import { useEffect, useState } from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n\n    const { loading, error, getCharacter, clearError} = useMarvelService(); \n\n    useEffect(() => {\n        updateChar() // eslint-disable-next-line\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        let id = Math.floor((Math.random() * (1011400 - 1011000 + 1)) + 1011000);\n        getCharacter(id) \n            .then(onCharLoaded) \n    }\n        \n    const errorMessage = error ? <ErrorMessage/> : null; \n    const spinner = loading ? <Spinner/> : null; \n    const content = !(loading || error) ? <View char={char}/> : null; \n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst View = ({char}) => { \n    const {thumbnail, description, name, homepage, wiki} = char;\n    let objectFit;\n    thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? objectFit = 'contain' : objectFit = 'unset';\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{objectFit: objectFit}}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    ) \n}\n\nexport default RandomChar;","import React, {useState, useEffect, useRef} from 'react';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(1247);\n    const [charEnded, setCharEnded] = useState(false);\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true); //Ф-я может быть ниже, тк d Реакте ф-я useEffect запускается после рендеринга \n    }, []) //при пустом массиве ф-я выполнится только 1 раз при создании компонента (имитация componentDidMount)\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded) \n    }\n\n    const  onCharListLoaded = (newCharList) => { \n\n        let ended = false; \n        if (newCharList.length < 9) { \n            ended = true;\n        }\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]); //useRef можно использовать только верхнеуровне (нельзя помещать в циклы, ф-ции) \n\n    const focusOnItem = (id) => { \n        itemRefs.current.forEach(item => { // при функциональном подходе нужно добавлять current\n            item.classList.remove('char__item_selected')\n        });\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus(); \n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let objectFit;\n            item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? objectFit = 'unset' : objectFit = 'cover';\n\n            return (\n                <li \n                    tabIndex='0'\n                    className=\"char__item\"\n                    key={item.id}\n                    ref={el => itemRefs.current[i] = el} \n                    onClick={() => {\n                        props.onCharSelected(item.id); \n                        focusOnItem(i); \n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i); \n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={{objectFit: objectFit}}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n        \n    const items = renderItems(charList);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    if (loading) {\n        import ('./someFunc') //динамический импорт\n            .then(obj => obj.default()) //в then запускаем функцию\n            .catch(err => console.log(err)); \n    }\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    onClick={() => onRequest(offset)}\n                    style={{'display': charEnded ? 'none' : 'block'}}>\n                <div className=\"inner\">\n                    load more\n                </div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport './charInfo.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar() // eslint-disable-next-line\n    }, [props.charId]);\n\n\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        const {charId} = props;\n\n        if(!charId){\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n        \n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null; \n    const spinner = loading ? <Spinner/> : null; \n    const content = !(loading || error || !char) ? <Info char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {errorMessage}\n                {spinner}\n                {skeleton}\n                {content}\n            </div>\n        )\n}\n\nconst Info = ({char}) => {\n    const {thumbnail, name, description, wiki, homepage, comics} = char;\n    let objectFit;\n    thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? objectFit = 'contain' : objectFit = 'unset';\n    \n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={{objectFit: objectFit}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'Not found'}\n                {comics.slice(0, 10).map((item, i) => {\n                    return (\n                        <li key={i} className=\"char__comics-item\">\n                            <Link to={`/comics/${item.resourceURI.substring(43)}`}>\n                                {item.name} \n                            </Link>\n                        </li>\n                    )                   \n                })}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number, \n}\n\nexport default CharInfo;","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = { \n    error: false,\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    })\n  }\n  \n  render() {\n    if (this.state.error === true) {\n      return (\n        <ErrorMessage/>\n      )\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n    const [selectedChar, setChar] = useState(null);\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected}/>\n                </ErrorBoundary>\n                <ErrorBoundary> \n                    <CharInfo charId={selectedChar}/>\n                </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    )\n}\n\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = () => {\n\n    const [comicList, setComicList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [comicListEnded, setComicListEnded] = useState(false);\n\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true); // eslint-disable-next-line \n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicListLoaded)\n    }\n\n    const onComicListLoaded = (newComicList) => {\n        let ended = false;\n        if (newComicList.length < 8) {\n            ended = true;\n        }\n        setComicList(comicList => [...comicList, ...newComicList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicListEnded(ended);\n    }\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            \n            return (\n                <li className=\"comics__item\"\n                key = {i}>\n                <Link to={`/comics/${item.id}`}>\n                    <img src={item.thumbnail} \n                         alt={item.title} \n                         className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(comicList);\n    const spinner = loading && !newItemLoading  ? <Spinner/> : null;\n    const errorMessage = error ? <ErrorMessage/> : null;\n\n    return (\n\n        <div className=\"comics__list\">\n            {items}\n            {spinner}\n            {errorMessage}\n            <button className=\"button button__main button__long\"\n                    onClick={() => onRequest(offset)}\n                    disabled={newItemLoading}\n                    style={{'display' : comicListEnded ? 'none' : 'block'}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppBanner from '../appBanner/AppBanner';\nimport ComicsList from \"../comicsList/ComicsList\";\n\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <AppBanner/>\n            <ErrorBoundary>\n                <ComicsList/>\n            </ErrorBoundary>\n        </>\n    )\n}\nexport default ComicsPage;","import './singleComicPage.scss';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport { useParams, Link } from 'react-router-dom';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams(); //используем для связывания адреса страницы с нужным комиксом\n    const [comic, setComic] = useState(null);\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateComic() // eslint-disable-next-line\n    }, [comicId]);\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const updateComic = () => {\n\n        clearError();\n        getComic(comicId)\n            .then(onComicLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null; \n    const spinner = loading ? <Spinner/> : null; \n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n\n    return (\n        <div className=\"single-comic\">\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title, description, pages, lang, price, thumbnail} = comic;\n\n    return (\n        <>\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pages}</p>\n                <p className=\"single-comic__descr\">Language: {lang}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to={'/comics'} className=\"single-comic__back\">Back to all</Link>\n        </>\n    )\n\n}\n\nexport default SingleComicPage;","export default __webpack_public_path__ + \"static/media/pageNotFound.ea5c0f12.webp\";","import pageNotFound from '../../resources/img/pageNotFound.webp';\nimport {Link} from 'react-router-dom';\nimport './pageNotFound.scss';\n\nconst Page404 = () => {\n    return (\n        <div>\n            <img className=\"img_404\" src={pageNotFound} alt=\"page not found\"/>\n            <h1 className='title_404'>Page not found</h1>\n            <Link className='link_menu' to='/'>Back to main page</Link>\n        </div>\n    )\n}\n\nexport default Page404;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport {MainPage, ComicsPage, SingleComicPage} from '../pages';\nimport Page404 from \"../pageNotFound/PageNotFound\";\n\nconst App = () => {\n\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route element={<MainPage/>} path=\"/\"/>\n                        <Route element={<ComicsPage/>} path=\"/comics\"/>\n                        <Route element={<SingleComicPage/>} path=\"/comics/:comicId\"/> {/* ключ :comicId прописываем вручную для дальнейшего присвоения туда id*/}\n                        <Route path=\"*\" element={<Page404 />} />\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM\n    .createRoot(document.getElementById('root'))\n    .render(\n        <App />\n    );\n\n"],"sourceRoot":""}