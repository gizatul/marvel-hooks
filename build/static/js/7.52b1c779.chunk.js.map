{"version":3,"sources":["components/errorMessage/error.svg","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","className","src","error","alt","useMarvelService","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllComics","offset","res","results","map","_transformComic","getComic","id","comic","title","thumbnail","path","extension","price","prices","description","lang","textObjects","language","pages","pageCount","resourceURI","getAllCharacters","_transformCharacter","getCharacterByName","name","getCharacter","char","length","slice","fullDescription","homepage","urls","wiki","comics","items","ErrorBoundary","state","errorInfo","console","log","this","setState","props","children","Component","AppBanner","avengers","avengersLogo","setContent","newItemLoading","ComicsList","comicList","setComicList","setOffset","setNewItemLoading","comicListEnded","setComicListEnded","useEffect","onRequest","initial","then","onComicListLoaded","newComicList","ended","arr","item","i","to","renderItems","onClick","disabled","style","ComicsPage","Helmet","content"],"mappings":"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","file":"static/js/7.52b1c779.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.be36707d.svg\";","import error from './error.svg';\nimport './errorMessage.scss';\n\nconst ErrorMessage = () => {\n  return (\n    <div className='error'>\n      <img  src={error} alt=\"error\" />\n      <div className='error__text'>Something  went wrong</div>\n    </div>\n  )\n}\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=cb9119d84ffeb91c59dc6c6080764863';\n    const _baseOffset = 1247;\n\n    const getAllComics = async (offset = '0') => {\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComic);\n    }\n    \n    const getComic = async (id = 32) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComic(res.data.results[0]);\n    }\n\n    const _transformComic = (comic) => {\n        return {\n            id: comic.id,\n            title: comic.title,\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\n            price: comic.prices[0].price ? comic.prices[0].price + '$' : 'Not available',\n            description: comic.description || 'There is no description',\n            lang: comic.textObjects[0]?.language || 'en-us',\n            pages: comic.pageCount ? comic.pageCount + 'p.' : 'No information about the number of pages',\n            resourceURI: comic.resourceURI,\n        }\n    }\n  \n    const getAllCharacters = async (offset = _baseOffset) => { \n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter); \n    }\n\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n\n    const getCharacter = async (id) => { \n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`); \n        return _transformCharacter(res.data.results[0]); \n    }\n\n    const _transformCharacter = (char) => {  \n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description.length > 180  ? `${char.description.slice(0, 180)}...` : char.description.length <= 0 ? 'There is not description' : char.description,\n            fullDescription: char.description ? char.description : 'There is not description' ,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            comics: char.comics.items,\n        } \n    }\n    return {getAllCharacters, \n            getCharacter, \n            clearError, \n            process,\n            setProcess, \n            getAllComics, \n            getComic, \n            getCharacterByName}\n}\nexport default useMarvelService;","import {useState, useCallback} from 'react';\n\nexport const useHttp = () => {\n\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type' : 'application/json'}) => {\n\n        setProcess('loading');\n\n        try {\n            let response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) { \n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); \n            }\n            const data = await response.json();\n            return data;\n        }   catch(error) {\n            setProcess('error');\n            throw error; \n        }\n    }, []) \n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []); \n    return { request,  clearError, process, setProcess};\n}\n","import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/errorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = { \n    error: false,\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    })\n  }\n  \n  render() {\n    if (this.state.error === true) {\n      return (\n        <ErrorMessage/>\n      )\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport { Link } from 'react-router-dom';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            return new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicList, setComicList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [comicListEnded, setComicListEnded] = useState(false);\n\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true); // eslint-disable-next-line \n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicListLoaded = (newComicList) => {\n        let ended = false;\n        if (newComicList.length < 8) {\n            ended = true;\n        }\n        setComicList(comicList => [...comicList, ...newComicList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicListEnded(ended);\n    }\n\n    const renderItems = (arr) => {\n        const items = arr.map((item, i) => {\n            \n            return (\n                <li className=\"comics__item\"\n                key = {i}>\n                <Link to={`/comics/${item.id}`}>\n                    <img src={item.thumbnail} \n                         alt={item.title} \n                         className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicList), newItemLoading)}\n            <button className=\"button button__main button__long\"\n                    onClick={() => onRequest(offset)}\n                    disabled={newItemLoading}\n                    style={{'display' : comicListEnded ? 'none' : 'block'}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppBanner from '../appBanner/AppBanner';\nimport ComicsList from \"../comicsList/ComicsList\";\nimport { Helmet } from \"react-helmet\";\n\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list our comics\"\n                    />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner/>\n            <ErrorBoundary>\n                <ComicsList/>\n            </ErrorBoundary>\n        </>\n    )\n}\nexport default ComicsPage;"],"sourceRoot":""}